# Usa una imagen base de Python 3.10 (versión slim para mantener la imagen liviana)
FROM python:3.10-slim

# Establece el directorio de trabajo
WORKDIR /app

# Copia el archivo de dependencias primero para aprovechar el cacheo de capas
COPY requirements.txt .

# Crea el entorno virtual en /opt/venv, actualiza pip e instala las dependencias
RUN python -m venv /opt/venv && \
    /opt/venv/bin/pip install --upgrade pip && \
    /opt/venv/bin/pip install -r requirements.txt

# Copia el resto de la aplicación
COPY api .

# Ajusta el PATH para usar el entorno virtual por defecto
ENV PATH="/opt/venv/bin:$PATH"

# Comando de inicio (modifícalo según cómo inicies tu app, aquí se asume que el entrypoint es app.py)
CMD ["fastapi", "run", "main.py", "--port", "80"]

# comandos docker:
# docker build --platform linux/amd64 -f DockerfileApi -t libertadores-api .
# docker run --name libertadores-api -p 8000:8000 --rm libertadores-api

# subir las imágenes a hub.docker
# docker login
# docker image tag libertadores-api:latest henryragua/libertadores-api:latest
# docker image push henryragua/libertadores-api:latest

# comandos railway
# railway login --browserless
# railway link
# railway service
